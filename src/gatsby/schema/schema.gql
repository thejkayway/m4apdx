### Type definitions saved at 2021-07-15T05:44:10.935Z ###

type File implements Node @dontInfer {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime: Date! @dateformat
  accessTime: Date! @dateformat
  changeTime: Date! @dateformat
  birthTime: Date! @dateformat
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime: Date! @dateformat
  mtime: Date! @dateformat
  ctime: Date! @dateformat
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
}

type Directory implements Node @dontInfer {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime: Date! @dateformat
  accessTime: Date! @dateformat
  changeTime: Date! @dateformat
  birthTime: Date! @dateformat
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime: Date! @dateformat
  mtime: Date! @dateformat
  ctime: Date! @dateformat
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
}

type Site implements Node @dontInfer {
  buildTime: Date @dateformat
  siteMetadata: SiteSiteMetadata
  port: Int
  host: String
  polyfill: Boolean
  pathPrefix: String
}

type SiteSiteMetadata @derivedTypes {
  title: String
  description: String
  siteUrl: String
  image: String
  menuLinks: [SiteSiteMetadataMenuLinks]
  searchIndices: [SiteSiteMetadataSearchIndices]
  postsPerFirstPage: Int
  postsPerPage: Int
  basePath: String
  blogBasePath: String
  eventsBasePath: String
}

type SiteSiteMetadataMenuLinks {
  name: String
  slug: String
  highVisibility: Boolean
}

type SiteSiteMetadataSearchIndices {
  name: String
  title: String
}

type SitePage implements Node @dontInfer {
  path: String!
  component: String!
  internalComponentName: String!
  componentChunkName: String!
  matchPath: String
}

type ThemeUiConfig implements Node @dontInfer {
  preset: JSON
  prismPreset: JSON
}

type MarkdownHeading {
  id: String
  value: String
  depth: Int
}

enum MarkdownHeadingLevels {
  h1
  h2
  h3
  h4
  h5
  h6
}

enum MarkdownExcerptFormats {
  PLAIN
  HTML
  MARKDOWN
}

type MarkdownWordCount {
  paragraphs: Int
  sentences: Int
  words: Int
}

type MarkdownRemark implements Node
  @childOf(
    mimeTypes: []
    types: [
      "contentfulPostBodyTextNode"
      "contentfulPostMetaDescriptionTextNode"
      "contentfulPageBodyTextNode"
      "contentfulPageMetaDescriptionTextNode"
      "contentfulEventMetaDescriptionTextNode"
      "contentfulEventDescriptionTextNode"
    ]
    many: false
  )
  @dontInfer {
  frontmatter: MarkdownRemarkFrontmatter
  excerpt: String
  rawMarkdownBody: String
}

type MarkdownRemarkFrontmatter {
  title: String
}

type contentfulPostBodyTextNode implements Node
  @childOf(mimeTypes: [], types: ["ContentfulPost"], many: false)
  @dontInfer {
  body: String
}

type contentfulPageMetaDescriptionTextNode implements Node
  @childOf(mimeTypes: [], types: ["ContentfulPage"], many: false)
  @dontInfer {
  metaDescription: String
}

type contentfulPageBodyTextNode implements Node
  @childOf(mimeTypes: [], types: ["ContentfulPage"], many: false)
  @dontInfer {
  body: String
}

type contentfulPostMetaDescriptionTextNode implements Node
  @childOf(mimeTypes: [], types: ["ContentfulPost"], many: false)
  @dontInfer {
  metaDescription: String
}

type ContentfulTag implements Node @dontInfer {
  title: String
  slug: String
  post: [ContentfulPost] @link(by: "id", from: "post___NODE")
  event: [ContentfulEvent] @link(by: "id", from: "event___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulTagSys
  node_locale: String
}

type ContentfulPost implements Node @dontInfer {
  title: String
  slug: String
  publishDate: Date @dateformat
  heroImage: ContentfulAsset @link(by: "id", from: "heroImage___NODE")
  tags: [ContentfulTag] @link(by: "id", from: "tags___NODE")
  body: contentfulPostBodyTextNode @link(by: "id", from: "body___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulPostSys
  node_locale: String
  metaDescription: contentfulPostMetaDescriptionTextNode
    @link(by: "id", from: "metaDescription___NODE")
}

type ContentfulAsset implements Node @dontInfer {
  contentful_id: String
  file: ContentfulAssetFile
  title: String
  description: String
  node_locale: String
}

type ContentfulAssetFile {
  url: String
  details: ContentfulAssetFileDetails
  fileName: String
  contentType: String
}

type ContentfulAssetFileDetails {
  size: Int
  image: ContentfulAssetFileDetailsImage
}

type ContentfulAssetFileDetailsImage {
  width: Int
  height: Int
}

type ContentfulPostSys {
  revision: Int
  contentType: ContentfulPostSysContentType
}

type ContentfulPostSysContentType {
  sys: ContentfulPostSysContentTypeSys
}

type ContentfulPostSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulTagSys {
  revision: Int
  contentType: ContentfulTagSysContentType
}

type ContentfulTagSysContentType {
  sys: ContentfulTagSysContentTypeSys
}

type ContentfulTagSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulPage implements Node @dontInfer {
  title: String
  slug: String
  body: contentfulPageBodyTextNode @link(by: "id", from: "body___NODE")
  metaDescription: contentfulPageMetaDescriptionTextNode
    @link(by: "id", from: "metaDescription___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulPageSys
  node_locale: String
}

type ContentfulPageSys {
  revision: Int
  contentType: ContentfulPageSysContentType
}

type ContentfulPageSysContentType {
  sys: ContentfulPageSysContentTypeSys
}

type ContentfulPageSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulContentType implements Node @dontInfer {
  name: String
  displayField: String
  description: String
}

type contentfulEventMetaDescriptionTextNode implements Node
  @derivedTypes
  @childOf(types: ["ContentfulEvent"])
  @dontInfer {
  metaDescription: String
  sys: contentfulEventMetaDescriptionTextNodeSys
}

type contentfulEventMetaDescriptionTextNodeSys {
  type: String
}

type contentfulEventDescriptionTextNode implements Node
  @derivedTypes
  @childOf(types: ["ContentfulEvent"])
  @dontInfer {
  description: String
  sys: contentfulEventDescriptionTextNodeSys
}

type contentfulEventDescriptionTextNodeSys {
  type: String
}

type ContentfulEvent implements Node @derivedTypes @dontInfer {
  title: String
  slug: String
  eventStartDate: Date @dateformat
  eventEndDate: Date @dateformat
  eventUrl: String
  featured: Boolean
  heroImage: ContentfulAsset @link(by: "id", from: "heroImage___NODE")
  tags: [ContentfulTag] @link(by: "id", from: "tags___NODE")
  description: contentfulEventDescriptionTextNode
    @link(by: "id", from: "description___NODE")
  metaDescription: contentfulEventMetaDescriptionTextNode
    @link(by: "id", from: "metaDescription___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulEventSys
  node_locale: String
}

type ContentfulEventSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulEventSysContentType
}

type ContentfulEventSysContentType @derivedTypes {
  sys: ContentfulEventSysContentTypeSys
}

type ContentfulEventSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}
